#!/bin/bash
############################################################
#A minimal script to see the timer for the terminal in Bash
#Author: Manuel Pichardo Marcano
#Website: manuelpm.me
#Dependencies: simpletimer
############################################################

source ~/.timervariables
if ps -C simpletimer > /dev/null ; then
	leftt=$leftt
	while [ $leftt -ne '0' ]; do
		columns=$(tput cols)
		printf -v maxbar '%s' $((columns-50))
		leftt=`ps -eo '%t %c' | grep simpletimer | grep -oh '[0-9][0-9]:[0-9][0-9]' | awk -F: '{print $1*60+$2}'`
		percenttimer=`echo '('$leftt/$stimes'*100)' | bc -l`
		leftt=$(($stimes-$leftt))
		printf -v percenttimer '%.2f' $percenttimer
		printf -v hashes '%0.f' `echo '(('$percenttimer'/100))*'$maxbar | bc -l`     
		printf -v spaces '%*s' $hashes ''
		printf -v spacesleft '%*s' $(($maxbar-$hashes)) ''
		echo -ne 'Percentage: '$percenttimer' % Time left: '`date -u -d @$leftt +%T`' ['`printf '%s' ${spaces// /#}``printf '%s' ${spacesleft// /-}`']\r'
		echo 'export stimes='$stimes > ~/.timervariables
		echo 'export leftt='$leftt >> ~/.timervariables
		sleep 1
	done
fi
if [ -n $leftt ] && [ $leftt -ne '0' ]; then
	leftt=$leftt
	echo -e 'Time left: '`date -u -d @$leftt +%T`
fi
